/**
 * Quatrix API
 * The Quatrix API enables you to automate your interaction with Quatrix using any scripting or programming language. You can test API calls on [Swagger](https://docs.maytech.net/swagger/), the interactive environment we use as the repository for the Quatrix API. In order to authorize to Quatrix API you will need to have a Quatrix account https://yourcompanyname.quatrix.it/ (e.g. https://test-api.quatrix.it/). You can set up a free trial account [here](https://www.maytech.net/freetrial.html#trial=qtrx). Below you'll find information on how to authenticate in a Quatrix session, how to construct JSON formatted API call and what JSON responses to expect.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorModel', 'model/ProfileInfoResp', 'model/ProfileRemoveMfaReq', 'model/ProfileRemoveMfaResp', 'model/ProfileResp', 'model/ProfileSetMfaReq', 'model/ProfileSetMfaResp', 'model/ProfileSetPasswordReq', 'model/ProfileSetPasswordResp', 'model/ProfileSetReq', 'model/ProfileSetResp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorModel'), require('../model/ProfileInfoResp'), require('../model/ProfileRemoveMfaReq'), require('../model/ProfileRemoveMfaResp'), require('../model/ProfileResp'), require('../model/ProfileSetMfaReq'), require('../model/ProfileSetMfaResp'), require('../model/ProfileSetPasswordReq'), require('../model/ProfileSetPasswordResp'), require('../model/ProfileSetReq'), require('../model/ProfileSetResp'));
  } else {
    // Browser globals (root is window)
    if (!root.QuatrixApi) {
      root.QuatrixApi = {};
    }
    root.QuatrixApi.ProfileApi = factory(root.QuatrixApi.ApiClient, root.QuatrixApi.ErrorModel, root.QuatrixApi.ProfileInfoResp, root.QuatrixApi.ProfileRemoveMfaReq, root.QuatrixApi.ProfileRemoveMfaResp, root.QuatrixApi.ProfileResp, root.QuatrixApi.ProfileSetMfaReq, root.QuatrixApi.ProfileSetMfaResp, root.QuatrixApi.ProfileSetPasswordReq, root.QuatrixApi.ProfileSetPasswordResp, root.QuatrixApi.ProfileSetReq, root.QuatrixApi.ProfileSetResp);
  }
}(this, function(ApiClient, ErrorModel, ProfileInfoResp, ProfileRemoveMfaReq, ProfileRemoveMfaResp, ProfileResp, ProfileSetMfaReq, ProfileSetMfaResp, ProfileSetPasswordReq, ProfileSetPasswordResp, ProfileSetReq, ProfileSetResp) {
  'use strict';

  /**
   * Profile service.
   * @module api/ProfileApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ProfileApi. 
   * @alias module:api/ProfileApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the profile2faGenerateGet operation.
     * @callback module:api/ProfileApi~profile2faGenerateGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate new 2fa code
     * Generate new 2fa code QR code 
     * @param {module:api/ProfileApi~profile2faGenerateGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.profile2faGenerateGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/profile/2fa/generate', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileGet operation.
     * @callback module:api/ProfileApi~profileGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Profile metadata
     * Get profile metadata 
     * @param {module:api/ProfileApi~profileGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileResp}
     */
    this.profileGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileResp;

      return this.apiClient.callApi(
        '/profile', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileInfoGet operation.
     * @callback module:api/ProfileApi~profileInfoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileInfoResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Additional profile info
     * Get additional profile info 
     * @param {module:api/ProfileApi~profileInfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileInfoResp}
     */
    this.profileInfoGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileInfoResp;

      return this.apiClient.callApi(
        '/profile/info', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileRemoveMfaPost operation.
     * @callback module:api/ProfileApi~profileRemoveMfaPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileRemoveMfaResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove MFA for account
     * Remove MFA for account if it was not forced by admin 
     * @param {module:model/ProfileRemoveMfaReq} body 
     * @param {module:api/ProfileApi~profileRemoveMfaPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileRemoveMfaResp}
     */
    this.profileRemoveMfaPost = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling profileRemoveMfaPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileRemoveMfaResp;

      return this.apiClient.callApi(
        '/profile/remove-mfa', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileSetMfaPost operation.
     * @callback module:api/ProfileApi~profileSetMfaPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileSetMfaResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set MFA enabled for account
     * Set multi factor autorization method (MFA) enabled for account 
     * @param {module:model/ProfileSetMfaReq} body 
     * @param {module:api/ProfileApi~profileSetMfaPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileSetMfaResp}
     */
    this.profileSetMfaPost = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling profileSetMfaPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileSetMfaResp;

      return this.apiClient.callApi(
        '/profile/set-mfa', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileSetPasswordPost operation.
     * @callback module:api/ProfileApi~profileSetPasswordPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileSetPasswordResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change profile password
     * Change profile password 
     * @param {module:model/ProfileSetPasswordReq} body 
     * @param {module:api/ProfileApi~profileSetPasswordPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileSetPasswordResp}
     */
    this.profileSetPasswordPost = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling profileSetPasswordPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileSetPasswordResp;

      return this.apiClient.callApi(
        '/profile/set-password', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the profileSetPost operation.
     * @callback module:api/ProfileApi~profileSetPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileSetResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update profile metadata
     * Update profile metadata 
     * @param {Object} opts Optional parameters
     * @param {module:model/ProfileSetReq} opts.body 
     * @param {module:api/ProfileApi~profileSetPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileSetResp}
     */
    this.profileSetPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProfileSetResp;

      return this.apiClient.callApi(
        '/profile/set', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
