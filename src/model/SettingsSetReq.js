/**
 * Quatrix API
 * The Quatrix API enables you to automate your interaction with Quatrix using any scripting or programming language. You can test API calls on [Swagger](https://docs.maytech.net/swagger/), the interactive environment we use as the repository for the Quatrix API. In order to authorize to Quatrix API you will need to have a Quatrix account https://yourcompanyname.quatrix.it/ (e.g. https://test-api.quatrix.it/). You can set up a free trial account [here](https://www.maytech.net/freetrial.html#trial=qtrx). Below you'll find information on how to authenticate in a Quatrix session, how to construct JSON formatted API call and what JSON responses to expect.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SettingssetShareTypes'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SettingssetShareTypes'));
  } else {
    // Browser globals (root is window)
    if (!root.QuatrixApi) {
      root.QuatrixApi = {};
    }
    root.QuatrixApi.SettingsSetReq = factory(root.QuatrixApi.ApiClient, root.QuatrixApi.SettingssetShareTypes);
  }
}(this, function(ApiClient, SettingssetShareTypes) {
  'use strict';




  /**
   * The SettingsSetReq model module.
   * @module model/SettingsSetReq
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SettingsSetReq</code>.
   * @alias module:model/SettingsSetReq
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>SettingsSetReq</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SettingsSetReq} obj Optional instance to populate.
   * @return {module:model/SettingsSetReq} The populated <code>SettingsSetReq</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('bcc')) {
        obj['bcc'] = ApiClient.convertToType(data['bcc'], ['String']);
      }
      if (data.hasOwnProperty('billing_emails')) {
        obj['billing_emails'] = ApiClient.convertToType(data['billing_emails'], ['String']);
      }
      if (data.hasOwnProperty('email_footer')) {
        obj['email_footer'] = ApiClient.convertToType(data['email_footer'], 'String');
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('pgp_enabled')) {
        obj['pgp_enabled'] = ApiClient.convertToType(data['pgp_enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('share_types')) {
        obj['share_types'] = SettingssetShareTypes.constructFromObject(data['share_types']);
      }
      if (data.hasOwnProperty('auth_methods')) {
        obj['auth_methods'] = ApiClient.convertToType(data['auth_methods'], ['String']);
      }
      if (data.hasOwnProperty('ip_whitelist')) {
        obj['ip_whitelist'] = ApiClient.convertToType(data['ip_whitelist'], ['String']);
      }
    }
    return obj;
  }

  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {Array.<String>} bcc
   */
  exports.prototype['bcc'] = undefined;
  /**
   * @member {Array.<String>} billing_emails
   */
  exports.prototype['billing_emails'] = undefined;
  /**
   * @member {String} email_footer
   */
  exports.prototype['email_footer'] = undefined;
  /**
   * @member {String} language
   */
  exports.prototype['language'] = undefined;
  /**
   * @member {Boolean} pgp_enabled
   */
  exports.prototype['pgp_enabled'] = undefined;
  /**
   * @member {module:model/SettingssetShareTypes} share_types
   */
  exports.prototype['share_types'] = undefined;
  /**
   * @member {Array.<module:model/SettingsSetReq.AuthMethodsEnum>} auth_methods
   */
  exports.prototype['auth_methods'] = undefined;
  /**
   * Available formats 1.1.1.1, 1.1.1.1\\32, 1.1.1.1-255
   * @member {Array.<String>} ip_whitelist
   */
  exports.prototype['ip_whitelist'] = undefined;


  /**
   * Allowed values for the <code>authMethods</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AuthMethodsEnum = {
    /**
     * value: "IP"
     * @const
     */
    "IP": "IP",
    /**
     * value: "2FA"
     * @const
     */
    "2FA": "2FA"  };


  return exports;
}));


