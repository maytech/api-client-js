/**
 * Quatrix API
 * The Quatrix API enables you to automate your interaction with Quatrix using any scripting or programming language. You can test API calls on [Swagger](https://docs.maytech.net/swagger/), the interactive environment we use as the repository for the Quatrix API. In order to authorize to Quatrix API you will need to have a Quatrix account https://yourcompanyname.quatrix.it/ (e.g. https://test-api.quatrix.it/). You can set up a free trial account [here](https://www.maytech.net/freetrial.html#trial=qtrx). Below you'll find information on how to authenticate in a Quatrix session, how to construct JSON formatted API call and what JSON responses to expect.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.QuatrixApi) {
      root.QuatrixApi = {};
    }
    root.QuatrixApi.TrackingCSVRespItems = factory(root.QuatrixApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TrackingCSVRespItems model module.
   * @module model/TrackingCSVRespItems
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>TrackingCSVRespItems</code>.
   * @alias module:model/TrackingCSVRespItems
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>TrackingCSVRespItems</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackingCSVRespItems} obj Optional instance to populate.
   * @return {module:model/TrackingCSVRespItems} The populated <code>TrackingCSVRespItems</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Time')) {
        obj['Time'] = ApiClient.convertToType(data['Time'], 'String');
      }
      if (data.hasOwnProperty('Event')) {
        obj['Event'] = ApiClient.convertToType(data['Event'], 'String');
      }
      if (data.hasOwnProperty('Action')) {
        obj['Action'] = ApiClient.convertToType(data['Action'], 'String');
      }
      if (data.hasOwnProperty('Client IPs')) {
        obj['Client IPs'] = ApiClient.convertToType(data['Client IPs'], 'String');
      }
      if (data.hasOwnProperty('User name')) {
        obj['User name'] = ApiClient.convertToType(data['User name'], 'String');
      }
      if (data.hasOwnProperty('Email')) {
        obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
      }
      if (data.hasOwnProperty('User status')) {
        obj['User status'] = ApiClient.convertToType(data['User status'], 'String');
      }
      if (data.hasOwnProperty('Protocol')) {
        obj['Protocol'] = ApiClient.convertToType(data['Protocol'], 'String');
      }
      if (data.hasOwnProperty('Payload')) {
        obj['Payload'] = ApiClient.convertToType(data['Payload'], Object);
      }
    }
    return obj;
  }

  /**
   * @member {String} Time
   */
  exports.prototype['Time'] = undefined;
  /**
   * @member {module:model/TrackingCSVRespItems.EventEnum} Event
   */
  exports.prototype['Event'] = undefined;
  /**
   * @member {module:model/TrackingCSVRespItems.ActionEnum} Action
   */
  exports.prototype['Action'] = undefined;
  /**
   * @member {String} Client IPs
   */
  exports.prototype['Client IPs'] = undefined;
  /**
   * @member {String} User name
   */
  exports.prototype['User name'] = undefined;
  /**
   * @member {String} Email
   */
  exports.prototype['Email'] = undefined;
  /**
   * @member {module:model/TrackingCSVRespItems.UserStatusEnum} User status
   */
  exports.prototype['User status'] = undefined;
  /**
   * @member {module:model/TrackingCSVRespItems.ProtocolEnum} Protocol
   */
  exports.prototype['Protocol'] = undefined;
  /**
   * other information(share id, files, etc)
   * @member {Object} Payload
   */
  exports.prototype['Payload'] = undefined;


  /**
   * Allowed values for the <code>Event</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EventEnum = {
    /**
     * value: "share"
     * @const
     */
    "share": "share",
    /**
     * value: "file"
     * @const
     */
    "file": "file",
    /**
     * value: "files-return"
     * @const
     */
    "files-return": "files-return"  };

  /**
   * Allowed values for the <code>Action</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionEnum = {
    /**
     * value: "create"
     * @const
     */
    "create": "create",
    /**
     * value: "revoke"
     * @const
     */
    "revoke": "revoke",
    /**
     * value: "created-link"
     * @const
     */
    "created-link": "created-link",
    /**
     * value: "sent-email"
     * @const
     */
    "sent-email": "sent-email",
    /**
     * value: "replied"
     * @const
     */
    "replied": "replied",
    /**
     * value: "upload"
     * @const
     */
    "upload": "upload",
    /**
     * value: "download"
     * @const
     */
    "download": "download",
    /**
     * value: "move-rename"
     * @const
     */
    "move-rename": "move-rename",
    /**
     * value: "rename"
     * @const
     */
    "rename": "rename",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "makedir"
     * @const
     */
    "makedir": "makedir",
    /**
     * value: "copy"
     * @const
     */
    "copy": "copy"  };

  /**
   * Allowed values for the <code>User status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UserStatusEnum = {
    /**
     * value: "A"
     * @const
     */
    "A": "A",
    /**
     * value: "D"
     * @const
     */
    "D": "D",
    /**
     * value: "R"
     * @const
     */
    "R": "R"  };

  /**
   * Allowed values for the <code>Protocol</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProtocolEnum = {
    /**
     * value: "web"
     * @const
     */
    "web": "web",
    /**
     * value: "SFTP"
     * @const
     */
    "SFTP": "SFTP"  };


  return exports;
}));


