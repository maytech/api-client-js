/**
 * Quatrix API
 * Download and upload files or folders, share them with predefined security options, manage your account and profile settings and a lot more functionalities can be easily integrated into your application using our Quatrix APIs. Learn more how to authenticate the Quatrix session, how to construct JSON formatted API calls and what responses to expect in our [API Guide](https://docs.maytech.net/display/MD/Quatrix+API).
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.QuatrixApi);
  }
}(this, function(expect, QuatrixApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new QuatrixApi.ProjectFolderApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectFolderApi', function() {
    describe('projectFolderAddUsersIdPost', function() {
      it('should call projectFolderAddUsersIdPost successfully', function(done) {
        //uncomment below and update the code to test projectFolderAddUsersIdPost
        //instance.projectFolderAddUsersIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderCreatePost', function() {
      it('should call projectFolderCreatePost successfully', function(done) {
        //uncomment below and update the code to test projectFolderCreatePost
        //instance.projectFolderCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderDeleteIdGet', function() {
      it('should call projectFolderDeleteIdGet successfully', function(done) {
        //uncomment below and update the code to test projectFolderDeleteIdGet
        //instance.projectFolderDeleteIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderDeleteUsersPost', function() {
      it('should call projectFolderDeleteUsersPost successfully', function(done) {
        //uncomment below and update the code to test projectFolderDeleteUsersPost
        //instance.projectFolderDeleteUsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderEditUsersIdPost', function() {
      it('should call projectFolderEditUsersIdPost successfully', function(done) {
        //uncomment below and update the code to test projectFolderEditUsersIdPost
        //instance.projectFolderEditUsersIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderGet', function() {
      it('should call projectFolderGet successfully', function(done) {
        //uncomment below and update the code to test projectFolderGet
        //instance.projectFolderGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderMetadataIdGet', function() {
      it('should call projectFolderMetadataIdGet successfully', function(done) {
        //uncomment below and update the code to test projectFolderMetadataIdGet
        //instance.projectFolderMetadataIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderProjectUsersPost', function() {
      it('should call projectFolderProjectUsersPost successfully', function(done) {
        //uncomment below and update the code to test projectFolderProjectUsersPost
        //instance.projectFolderProjectUsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderSetUsersPost', function() {
      it('should call projectFolderSetUsersPost successfully', function(done) {
        //uncomment below and update the code to test projectFolderSetUsersPost
        //instance.projectFolderSetUsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectFolderUsersIdGet', function() {
      it('should call projectFolderUsersIdGet successfully', function(done) {
        //uncomment below and update the code to test projectFolderUsersIdGet
        //instance.projectFolderUsersIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
